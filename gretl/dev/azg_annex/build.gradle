plugins {
    id "ch.so.agi.gretl" version "1.0.5-SNAPSHOT"
}

import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet
import java.nio.file.Paths

def GROUP = "OEREB-Auszugs-Annex"

task createSchemaOerebAuszugAnnex(type: Ili2pgImportSchema) {
    description = "Erstellt das OEREB-Auszugs-Annex-Schema mit Zusatzinformationen für XML-Auszug."
    group = GROUP
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    models = iliModelAuszugAnnex
    modeldir = "../../models/;http://models.geo.admin.ch" // TODO: temporär
    dbschema = dbSchemaOerebAuszugAnnex
    nameByTopic = true
    createFk = false
    createFkIdx = true
    createUnique = false
    createNumChecks = false
    sqlEnableNull = false
    createEnumTabs = true
    createBasketCol = false
    createDatasetCol = false
    smart2Inheritance = true
    strokeArcs = true
    defaultSrsCode = 2056
    disableValidation = true
}

task createDataOerebAuszugAnnex(type: SqlExecutor) {
    description = "Erstellt einmalig die Zusatzdaten für den XML-Auszug ($dbSchemaOerebAuszugAnnex). Anschliessend passiert die Nachführung in der Erfassungs-DB. Ist so nur zum einmaligen Herstellen (Dummydaten)."
    group = GROUP
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    sqlFiles = ["createOerebAuszugAnnex.sql"]
}

task exportDataOerebAuszugAnnex(type: Ili2pgExport) {
    description = "Export die Auszug-Annex-Daten."
    group = GROUP
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    models = iliModelAuszugAnnex    
    modeldir = "../../models/;http://models.geo.admin.ch" // TODO: temporär
    dbschema = dbSchemaOerebAuszugAnnex
    dataFile = file("ch.so.agi.oereb.auszug.annex.xtf")
    disableValidation = true
}
